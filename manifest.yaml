id: lnproxy 
title: "lnproxy"
version: 0.0.1
release-notes: "Initial Release for EmbassyOS"
license: GLP-3.0
wrapper-repo: "https://github.com/islandbitcoin/lnproxy-wrapper"
upstream-repo: "https://github.com/lnproxy/lnproxy"
support-site: "https://github.com/lnproxy/lnproxy/issues"
marketing-site: "https://lnproxy.org"
build: ["make"]
description:
  short: A wrapped lightning hodl invoice generator
  long: |
    lnproxy takes a bolt 11 invoice and generates a “wrapped” invoice that can be settled if and only if the original invoice is settled. The “wrapped” invoice has the same payment hash, expiry, and description, as the invoice it wraps but adds a small routing fee to the amount. The “wrapped” invoice can be used anywhere the original invoice would be used to trustlessly hide the destination of a payment. 
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: /root
    lnd: /mnt/lnd
health-checks:
  web-ui:
    name: Web UI
    success-message: lnproxy is ready to visit in a web browser
    type: script
config: 
  get:
    type: script
  set:
    type: script
properties:
  type: script
volumes:
  main:
    type: data
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: "/public"
    readonly: true
interfaces:
  main:
    name: lnproxy Web Interface
    description: Specifies the interface to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "80"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
dependencies: 
  lnd:
    version: ">=0.11.0 <0.16.0"
    requirement:
      type: required
    config: ~
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args: 
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /root/data
      - /mnt/backup
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/data"
migrations:
 from:
   "*":
     type: script
     args: ["from"]
 to:
   "*":
     type: script
     args: ["to"]

